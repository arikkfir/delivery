apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis
spec:
  selector:
    matchLabels: {}
  replicas: 1
  strategy:
    type: Recreate
  template:
    metadata:
      labels: {}
    spec:
      containers:
        - image: redis/redis-stack-server:7.2.0-v0
          name: redis
          env: []
          ports:
            - containerPort: 6379
              name: client-nontls
          livenessProbe:
            exec:
              command:
                - bash
                - -c
                - '[[ "$(redis-cli PING)" == "PONG" ]]'
            successThreshold: 1
            failureThreshold: 3
            periodSeconds: 10
            terminationGracePeriodSeconds: 60
            timeoutSeconds: 5
          readinessProbe:
            exec:
              command:
                - bash
                - -c
                - '[[ "$(redis-cli PING)" == "PONG" ]]'
            successThreshold: 1
            failureThreshold: 3
            periodSeconds: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 500m
              memory: 64Mi
            requests:
              cpu: 500m
              memory: 64Mi
          startupProbe:
            exec:
              command:
                - bash
                - -c
                - '[[ "$(redis-cli PING)" == "PONG" ]]'
            failureThreshold: 5
            initialDelaySeconds: 2
            periodSeconds: 1
            terminationGracePeriodSeconds: 60
            timeoutSeconds: 5
          volumeMounts:
            - mountPath: /data
              name: data
              readOnly: false
      enableServiceLinks: false
      serviceAccountName: redis
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: redis
            readOnly: false
